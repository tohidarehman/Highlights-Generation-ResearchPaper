 One of the main challenges in video games is to compute paths as efficiently as possible for groups of agents . As both the size of the environments and the number of autonomous agents increase it becomes harder to obtain results in real time under the constraints of memory and computing resources . Hierarchical approaches such as HNA can compute paths more efficiently although only for certain configurations of the hierarchy . For other configurations the method suffers from a bottleneck in the step that connects the Start and Goal positions with the hierarchy . This bottleneck can drop performance drastically . In this paper we present two approaches to solve the HNA bottleneck and thus obtain a performance boost for all hierarchical configurations . The first method relies on further memory storage and the second one uses parallelism on the GPU . Our comparative evaluation shows that both approaches offer speed ups as high as 9x faster than A and show no limitations based on hierarchical configuration . Finally we show how our CUDA based parallel implementation of HNA for multi agent path finding can now compute paths for over 500K agents simultaneously in real time with speed ups above 15x faster than a parallel multi agent implementation using A .

@highlight Hierarchical path finding can highly boost performance once the connecting S and G problem is solved.
@highlight Multi agent simulation can also benefit from speedups larger than a basic parallel A method.
@highlight There is a trade off in the memory cost of methods that require pre computation compared to full parallel solutions.
@highlight Pre computed methods offer the highest speedups.
