 The limited battery life of modern mobile devices is one of the key problems limiting their use. Even if the offloading of computation onto cloud computing platforms can considerably extend battery duration, it is really hard not only to evaluate the cases where offloading guarantees real advantages on the basis of the requirements of the application in terms of data transfer, computing power needed, etc., but also to evaluate whether user requirements (i.e. the costs of using the cloud services, a determined QoS required, etc.) are satisfied. To this aim, this paper presents a framework for generating models to make automatic decisions on the offloading of mobile applications using a genetic programming (GP) approach. The GP system is designed using a taxonomy of the properties useful to the offloading process concerning the user, the network, the data and the application. The fitness function adopted permits different weights to be given to the four categories considered during the process of building the model. Experimental results, conducted on datasets representing different categories of mobile applications, permit the analysis of the behavior of our algorithm in different applicative contexts. Finally, a comparison with the state of the art of the classification algorithm establishes the goodness of the approach in modeling the offloading process.

@highlight This work defines a taxonomy of the main properties of a mobile application useful for the task of offloading, divided into four categories: user, network, data and application.
@highlight The paper describes the design of an automatic framework that drives the process of offloading, by building and validating models for that process.
@highlight The system permits the analysis of the behavior of our algorithm for different categories of mobile applications, presenting different distributions of the main properties.
@highlight A GP-based tool for building the decision tree-based model, which will decide whether it is convenient to perform the offloading of a mobile application, is adopted.
@highlight Experimental evaluation permitted the analysis of the behavior of our algorithm for different categories of mobile applications.
