 To get a better prediction of costs, schedule, and the risks of a software project, it is necessary to have a more accurate prediction of its development effort. Among the main prediction techniques are those based on mathematical models, such as statistical regressions or machine learning (ML). The ML models applied to predicting the development effort have mainly based their conclusions on the following weaknesses:  using an accuracy criterion which leads to asymmetry,  applying a validation method that causes a conclusion instability by randomly selecting the samples for training and testing the models,  omitting the explanation of how the parameters for the neural networks were determined,  generating conclusions from models that were not trained and tested from mutually exclusive data sets,  omitting an analysis of the dependence, variance and normality of data for selecting the suitable statistical test for comparing the accuracies among models, and  reporting results without showing a statistically significant difference. In this study, these six issues are addressed when comparing the prediction accuracy of a radial Basis Function Neural Network (RBFNN) with that of a regression statistical (the model most frequently compared with ML models), to feedforward multilayer perceptron (MLP, the most commonly used in the effort prediction of software projects), and to general regression neural network (GRNN, a RBFNN variant). The hypothesis tested is the following: the accuracy of effort prediction for RBFNN is statistically better than the accuracy obtained from a simple linear regression (SLR), MLP and GRNN when adjusted function points data, obtained from software projects, is used as the independent variable. Samples obtained from the International Software Benchmarking Standards Group (ISBSG) Release 11 related to new and enhanced projects were used. The models were trained and tested from a leave-one-out cross-validation method. The criteria for evaluating the models were based on Absolute Residuals and by a Friedman statistical test. The results showed that there was a statistically significant difference in the accuracy among the four models for new projects, but not for enhanced projects. Regarding new projects, the accuracy for RBFNN was better than for a SLR at the 99% confidence level, whereas the MLP and GRNN were better than for a SLR at the 90% confidence level.

@highlight This study is related to a software engineering application based on neural networks.
@highlight Neural Networks are applied for predicting the development effort of software projects.
@highlight Prediction accuracy of neural networks is compared with that of a Statistical Regression.
@highlight Samples of software projects for training and testing the models are obtained from ISBSG data set.
@highlight A Radial Basis Function Neural Network had a prediction accuracy with the highest confidence level.
