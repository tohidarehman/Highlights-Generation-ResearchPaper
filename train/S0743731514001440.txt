 Large-scale compute clusters of heterogeneous nodes equipped with multi-core CPUs and GPUs are getting increasingly popular in the scientific community. However, such systems require a combination of different programming paradigms making application development very challenging. In this article we introduce libWater, a library-based extension of the OpenCL programming model that simplifies the development of heterogeneous distributed applications. libWater consists of a simple interface, which is a transparent abstraction of the underlying distributed architecture, offering advanced features such as inter-context and inter-node device synchronization. It provides a runtime system which tracks dependency information enforced by event synchronization to dynamically build a DAG of commands, on which we automatically apply two optimizations: collective communication pattern detection and device-host-device copy removal. We assess libWaterâ€™s performance in three compute clusters available from the Vienna Scientific Cluster, the Barcelona Supercomputing Center and the University of Innsbruck, demonstrating improved performance and scaling with different test applications and configurations.

@highlight libWater programming model, which extends OpenCL with a simplified interface.
@highlight A lightweight distributed runtime system based on asynchronous command execution.
@highlight A powerful representation that collects and arranges dependencies between commands.
@highlight Dynamic Collective Replacement and Device-Host-Device Copy Removal optimizations.
@highlight A study of the performance of the library on three compute clusters.
