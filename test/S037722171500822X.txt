 This paper presents an Iterated Tabu Search and Variable Neighborhood Descent (ITS-VND) algorithm for packing unequal circles into a circular container (PUCC). The algorithm adapts the Tabu Search procedure of Iterated Tabu Search algorithms and proposes a Tabu Search and Variable Neighborhood Descent (TS-VND) procedure. We observe there are strong complementarities between the small circles and the large vacant places, and propose the insert neighborhood to match up the small circles with the large vacant places. Although the insert neighborhood is inefficient and time-consuming, it is an important supplement to the classic swap neighborhood as it could arrange the small circles properly. Predicated on these features, we employ the insert neighborhood only at chosen local minima of the swap neighborhood that shows promise for an improvement. The traditional Tabu Search procedure is then transformed into a hybrid procedure composed of two alternative parts, namely Variable Neighborhood Descent and Tabu Search respectively. Besides this reformed procedure, ITS-VND also incorporates other new features, such as an adaptive evaluation function, a novel method for accelerating the neighborhood exploration, and the “collision accidents” criterion for evaluating how intensively the area near the current solution has been explored. The computational results on three well established benchmark sets show that the proposed algorithm not only has a good discovery capability but also can provide good results within a reasonable time. For a total of 84 benchmark instances, the proposed algorithm improves the best-known results on 23 instances, matches 60, and only misses one.

@highlight Highlight
@highlight A high performance algorithm for packing unequal circles into a circular container.
@highlight A new insert neighborhood is designed to supplement traditional swap neighborhood.
@highlight An efficient mechanism to employ the insert neighborhood.
@highlight The algorithm improves or matches all but one records of three benchmark sets.
@highlight Analyses on which key new features are important and how they work.
