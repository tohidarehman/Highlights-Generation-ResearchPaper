 In most practical environments, scheduling is an ongoing reactive process where the presence of real time information continually forces reconsideration and revision of pre-established schedules. The objectives of the research reported in this paper are to respond to changes in the problem, to solve the new problem faster and to use some parts of the previous solution for the next problem. In this paper, based on Network Simplex Algorithm, a dynamic algorithm, which is called Dynamic Network Simplex Algorithm (DNSA), is presented. Although the traditional network simplex algorithm is at least one hundred times faster than traditional simplex algorithm for Linear Programs (through specialization), for dynamic scheduling with large scale problems it still takes time to make a new graph model and to solve it. The overall approach of DNSA is to update the graph model dynamically and repair its spanning tree by some strategies when any changes happen. To test the algorithm and its performance, an application of this algorithm to Dynamic Scheduling of Automated Guided Vehicles in the container terminal is used. The dynamic problem arises when new jobs are arrived, the fulfilled jobs are removed and the links or junctions are blocked (which results in distances between points being changed). The results show considerable improvements, in terms of reducing the number of iterations and CPU time, to solve randomly generated problems.

@highlight We present a dynamic version for the Network Simplex Algorithm, which is called Dynamic Network Simplex Algorithm (DNSA).
@highlight The overall approach of DNSA is to update the graph model dynamically and repair its spanning tree.
@highlight To test the algorithm and its performance, an application of Automated Guided Vehicles in container terminals is used.
@highlight The results show considerable improvements, in terms of reducing the number of iterations.
