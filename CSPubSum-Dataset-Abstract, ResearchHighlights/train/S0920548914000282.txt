 Multi-agent Systems (MASs) are one of the main fields of distributed systems. MASs are based on autonomous entities that cooperate obtaining emergent behaviors, and can be useful for integrating open systems. However, the great diversity of agent-oriented modeling languages (AOMLs) hinders the understanding and interchange of MAS models. Most MAS concepts are shared among the AOMLs. However, these concepts have certain peculiarities in each AOML, such as the expected behavior and concrete syntax. This paper presents a metamodeling solution for the integration of the AOML diversity that uses the powertype pattern. In this pattern, the clabjects represent concept subtypes and are instantiated in models. MAS designers can change the clabject properties to indicate the peculiarities of each concept subtype, depending on the particular needs. Each designer can understand models of other experts by consulting the peculiarities of concepts in models. This solution is the Inter-methodology AOML, which is supported with a graphical modeling tool. This tool is created with a model-driven development approach. This work presents this AOML as a first step of a potential standardization process in the modeling of MASs. In addition, the Ingenias Development Kit tool, an existing agent-oriented software engineering tool, is adapted to export models to the presented AOML. The proposed Inter-methodology AOML is quantitatively compared with other AOMLs in nine different problem domains, and this comparison shows that the proposed Inter-methodology AOML can determine a higher proportion of concepts in these domains than other AOMLs. The presented AOML is also evaluated and validated with its mapping to FAML.

@highlight A language for integrating the agent-oriented modeling languages (AOMLs) diversity
@highlight Metamodel with concept subtypes that cover peculiarities of existing AOMLs
@highlight Tool support for editing models of this language, called Inter-methodology AOML
@highlight Existing AOSE tools can be adapted to export models in this language, as IDK tool.
@highlight Comparison with common existing AOMLs in nine problem domains and mapping to FAML
