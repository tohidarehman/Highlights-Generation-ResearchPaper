 Femtocells offer many advantages in wireless networks such as improved cell capacity and coverage in indoor areas. As these femtocells can be deployed in an ad hoc manner by different consumers in the same frequency band, the femtocells can interfere with each other. To fully realize the potential of the femtocells, it is necessary to allocate resources to them in such a way that interference is mitigated. We propose a distributed resource allocation algorithm for femtocell networks that is modelled after link-state routing protocols. Resource allocation using Link State Propagation (RALP) consists of a graph formation stage, where individual femtocells build a view of the network, an allocation stage, where every femtocell executes an algorithm to assign OFDMA resources to all the femtocells in the network and local scheduling stage, where a femtocell assigns resources to all user equipments based on their throughput requirements. Our evaluation shows that RALP performs better than existing femtocell resource allocation algorithms with respect to spatial reuse and satisfaction rate of required throughput.

@highlight RALP local scheduler – RALP uses messages exchanges and a global allocation algorithm to assign allocation units (AUs) to the various FAPs. In this article, we have proposed a local scheduling scheme that each FAP uses to assign AUs to the various user equipments (Ues). The algorithm uses the modulation and coding scheme (MCS) of the AUs to do the assignment.
@highlight The global allocation algorithm assigns AUs to the various FAPs. However, one FAP might require more AUs than what it has been assigned. If the neighboring FAPs are not using all their assigned AUs, then this FAP can borrow AUs from the neighboring FAPs and use it to satisfy its requirements. The borrowing algorithm describes how FAPs can borrow AUs from other FAPs.
@highlight RALP’s main disadvantage is its convergence time as the message exchange rounds depend on the neighborhood graph. In this article, we introduce the concept of clusters, where the data transfer can proceed after a certain number of message exchange rounds.
