 Most real-world problems naturally involve multiple conflicting objectives, such as in the case of attempting to maximize both efficiency and safety of a working environment. The aim of multi-objective optimization algorithms is to find those solutions that optimize several components of a vector of objective functions simultaneously. However, when objectives conflict with each other, the multi-objective problem does not have a single optimal solution for all objectives simultaneously. Instead, algorithms attempt to search for the set of efficient solutions, known as the global non-dominated set, that provides solutions that optimally trade-off the objectives. The final solution to be adopted from this set would depend on the preferences of the decision-makers involved in the process. Hence, a decision-maker is typically interested in knowing as many potential solutions as possible. In this paper, we propose an extension to a previous piece of work on multi-objective cooperative coevolution algorithms (MOCCA). The idea was motivated with a practical problem in air traffic management to design terminal airspaces. MOCCA and a further study that was done on a distributed environment for MOCCA, were found to fit the need for the application. We systematically questioned key components of this algorithm and investigated variations to identify a better design. This paper summarizes this systematic investigation and present the resultant new algorithm: multi-objective co-operative co-evolutionary algorithm II (MOCCA-II).

@highlight A new multi-objective co-operative co-evolutionary algorithm.
@highlight A systemic investigation into niching and archiving strategies in multi-objective co-operative co-evolutionary.
@highlight A comparison study that highlights the performance of different niching and archiving strategies in multi-objective co-operative co-evolutionary.
