 The execution context in which pervasive systems or mobile computing run changes continually. Hence, applications for these systems require support for self-adaptation to the continual context changes. Most of the approaches for self-adaptive systems implement a reconfiguration service that receives as input the list of all possible configurations and the plans to switch between them. In this paper we present an alternative approach for the automatic generation of application configurations and the reconfiguration plans at runtime. With our approach, the generated configurations are optimal as regards different criteria, such as functionality or resource consumption (e.g. battery or memory). This is achieved by:  modelling architectural variability at design-time using the Common Variability Language (CVL), and  using a genetic algorithm that finds nearly-optimal configurations at run-time using the information provided by the variability model. We also specify a case study and we use it to evaluate our approach, showing that it is efficient and suitable for devices with scarce resources.

@highlight We specify an approach for the dynamic reconfiguration of mobile applications.
@highlight We model a mobile application with variability which can be reconfigured at runtime.
@highlight We simulate the execution of the mobile application when our dynamic reconfiguration service is applied and not applied, respectively.
@highlight We measure the battery life as well as the overall utility of the application perceived by the user.
@highlight Applying our dynamic reconfiguration, the battery life is incremented by 45.9% and the utility is incremented by 10.31%.
