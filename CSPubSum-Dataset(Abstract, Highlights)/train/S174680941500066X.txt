 Pulse transit time (PTT) and pulse wave velocity (PWV) are the markers most widely used to evaluate the vascular effects of aging, hypertension, arterial stiffness and atherosclerosis. To calculate these markers it is necessary to determine the location of the onset and systolic peak of the arterial pulse wave (APW). In this paper, a method employed for electrocardiography (ECG) R peak detection, with a slight modification, is applied for both the onset and systolic peak detections in APW. The method employs Shannon energy envelope (SEE) estimator, Hilbert transform (HT) and moving average (MA) filter. The minimum value and the positive zero-crossing points of the odd-symmetry function of the HT correspond to the locations of the onset and systolic peak respectively. The algorithm was evaluated using expert's annotations, with 10 records of 5min length and different signal-to-noise ratios (15, 12 and 9dB) and achieved a good performance and precision. When compared to, expert's annotation, the algorithm detected these fiducial points with average sensitivity, positive predictivity and accuracy of 100% and presented errors less than 10ms. In APW signals contaminated with noise in both cases the relative error is less than 2% respect to pulse wave periods of 800ms. The performance of algorithm was compared with both foot approximation and adaptive threshold methods and the results show that the algorithm outperforms theses reported methods with respect to manuals annotation. The results are promising, suggesting that the method provides a simple but accurate onset and systolic peak detection and can be used in the measurement of pulse transit time, pulse wave velocity and pulse rate variability.

@highlight Hilbert transform method can be used for detecting both the onset and systolic peak in pulse wave signals.
@highlight It achieves good performance and precision when compared to expert annotation.
@highlight It is robust when noise and interference are present in pulse wave and also.
@highlight Shows a low detection error rate.
@highlight It is computationally simple.
